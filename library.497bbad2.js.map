{"mappings":"AAAA,MAAMA,EAAQC,SAASC,cAAc,gBAIxBC,EAAYC,MAAOC,EAAMC,KACpC,MAAMC,EAEJ,2GAAwDD,UAAcD,wBAClEG,QAAiBC,MAAMF,GACvBG,QAAaF,EAASG,OAC5B,OAAID,EAAKE,QAAQC,OAAS,GACxBb,EAAMc,UACJ,8EACK,IAGFJ,CAAI,EAGAK,EAAmBX,UAC9B,MACMI,QAAiBC,MADNO,6FAGjB,aADmBR,EAASG,MACjB,EAGAM,EAAkBb,UAC7B,MACMI,QAAiBC,MADNO,0FAEXN,QAAaF,EAASG,OAG5B,OADAO,EAAkBR,GACXA,CAAI,EAGPQ,EAAoBR,IACxB,MAAMS,EAAgBT,EAAKU,OAE3BC,eAAeC,QAAQ,YAAaC,KAAKC,UAAUL,GAAe,EClCpEM,OAAOC,OAAStB,UACd,MAAMM,QAAaK,IACnBY,EAAcjB,EAAKE,QAAQ,EAO7B,MAAMgB,EAAY3B,SAASC,cAAc,gBACnC2B,EAAa5B,SAASC,cAAc,iBACpC4B,EAAU7B,SAASC,cAAc,oBACjC6B,EAAQ9B,SAASC,cAAc,gBACrC,IAAI8B,EAAQ,GAEZ,MAAMC,EAAeC,GAAMF,EAAQE,EAAEC,OAAOC,MAAMC,OAW5CC,EATiBlC,WACrBa,IACAsB,QAAQC,IAAI,UAAWT,GACvB,MAAMU,EAAepB,eAAeqB,QAAQ,aAC5CH,QAAQC,IAAIC,GACZ,MAAME,EAAgBpB,KAAKqB,MAAMH,GAEjC,OADAF,QAAQC,IAAIG,GACLA,CAAa,EAEHE,GAMbC,EAAmBC,GACJA,EAASC,MAAM,EAAG,GAAGC,KAAIC,GAN9B9C,OAAM8C,UACIZ,EAAWa,QAAOjB,GAAKA,EAAEgB,KAAOA,KACvC,GAAGE,KAI8BC,CAAQH,KACxCI,KAAK,KAYnB3B,EAAgBjB,IACpB,MAAM6C,EAAS7C,EACZuC,KAAIO,IACH,MAAMC,EAAcX,EAAiBU,EAAME,WAC3C,MAAO,0FAEyCF,EAAMG,oFACSH,EAAMG,qBAAqBH,EAAMI,uFAEvEJ,EAAMK,oDACNJ,uCACAD,EAAMM,kDACNN,EAAMO,0EAI5B,IAEJT,KAAK,KACRxB,EAAQkC,mBAAmB,YAAaT,EAAO,EAGjD1B,EAAWoC,iBAAiB,SA/BR7D,MAAM8B,IACxBA,EAAEgC,iBACF7D,KAAO,EAiCPyB,EAAQhB,UAAY,GA/BpBiB,EAAMjB,UAAY,GAClB,MAAMqD,QAAkBhE,EAHjB,EAGiC6B,GACxCL,EAAcwC,EAAUvD,QAAQ,IA0BlCqB,GAAgBL,EAAUqC,iBAAiB,QAAShC","sources":["src/js/getMovies.js","src/index.js"],"sourcesContent":["const alert = document.querySelector('#wrongSearch');\nconst API_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'b118f38ec77100db6763b4cc83604589'; // Should be changed to the correct one\n\nexport const getMovies = async (page, query) => {\n  const endPoint =\n    API_URL +\n    `search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=${page}&include_adult=false`;\n  const response = await fetch(endPoint);\n  const data = await response.json();\n  if (data.results.length < 1) {\n    alert.innerHTML =\n      'Search result not successful. Enter the correct movie name and search again';\n    return {};\n  }\n  // console.log(data);\n  return data;\n};\n\nexport const getPopularMovies = async () => {\n  const endPoint = API_URL + `trending/movie/week?api_key=${API_KEY}`;\n  const response = await fetch(endPoint);\n  const data = await response.json();\n  return data;\n};\n\nexport const getGenresMovies = async () => {\n  const endPoint = API_URL + `genre/movie/list?api_key=${API_KEY}`;\n  const response = await fetch(endPoint);\n  const data = await response.json();\n  // console.log(data);\n  genresDataStorage(data);\n  return data;\n};\n\nconst genresDataStorage = data => {\n  const genreMovieIds = data.genres;\n  // console.log(genreMovieIds);\n  sessionStorage.setItem('genresIds', JSON.stringify(genreMovieIds));\n};\n","import { getMovies, getPopularMovies, getGenresMovies } from './js/getMovies';\n\n// MOST POPULAR MOVIES - START //\n\nwindow.onload = async () => {\n  const data = await getPopularMovies();\n  createGallery(data.results);\n};\n// DATA AND SCOPE SHOULD BE CONFIRMED\n\n// MOST POPULAR MOVIES - END//\n\n//INPUT - START//\nconst inputForm = document.querySelector('[data-input]');\nconst buttonForm = document.querySelector('[data-search]');\nconst gallery = document.querySelector('.films-cards-set');\nconst alert = document.querySelector('#wrongSearch');\nlet query = '';\n\nconst handleChange = e => (query = e.target.value.trim());\n\nconst genresMovieIds = async () => {\n  getGenresMovies();\n  console.log('alert: ', alert);\n  const genreIdsJson = sessionStorage.getItem('genresIds');\n  console.log(genreIdsJson);\n  const genreIdsParse = JSON.parse(genreIdsJson);\n  console.log(genreIdsParse);\n  return genreIdsParse;\n};\nconst genreMovie = genresMovieIds();\nconst genreId = async id => {\n  const genreName = await genreMovie.filter(e => e.id === id);\n  return genreName[0].name;\n};\n\nconst createGenreArray = genreIds => {\n  const genreArray = genreIds.slice(0, 3).map(id => genreId(id));\n  return genreArray.join(',');\n};\n\nconst handleClick = async e => {\n  e.preventDefault();\n  page = 1;\n  clearGallery();\n  alert.innerHTML = '';\n  const dataMovie = await getMovies(page, query);\n  createGallery(dataMovie.results);\n};\n\nconst createGallery = data => {\n  const movies = data\n    .map(movie => {\n      const genresTitle = createGenreArray(movie.genre_ids);\n      return `\n        <div class=\"film-card\">\n        <a href=https://image.tmdb.org/t/p/original/${movie.poster_path}>\n        <img class=\"film-img\" src=\"https://image.tmdb.org/t/p/w200/${movie.poster_path}\" alt=\"${movie.title}\" loading=\"lazy\" /> \n        <div class=\"info\">\n        <p class=\"info-item\">${movie.original_title}</p>\n        <p class=\"info-item\">${genresTitle}</p>\n        <p class=\"info-item\">${movie.release_date}</p>\n        <p class=\"info-item\">${movie.vote_average}</p>\n        </div>\n        </a>\n        </div>\n        `; // Class name and other should be update\n    })\n    .join(' ');\n  gallery.insertAdjacentHTML('beforeend', movies);\n};\n\nbuttonForm.addEventListener('click', handleClick);\nhandleChange && inputForm.addEventListener('input', handleChange);\n\nfunction clearGallery() {\n  gallery.innerHTML = '';\n}\n\n// INPUT - END//\n"],"names":["$8124735307ad2aa2$var$alert","document","querySelector","$8124735307ad2aa2$export$60e1c8f5f122c5ac","async","page","query","endPoint","response","fetch","data","json","results","length","innerHTML","$8124735307ad2aa2$export$76bd8a7b840a3729","$8124735307ad2aa2$var$API_URL","$8124735307ad2aa2$export$d5a20859808322b2","$8124735307ad2aa2$var$genresDataStorage","genreMovieIds","genres","sessionStorage","setItem","JSON","stringify","window","onload","$1f0dc3b9307be026$var$createGallery","$1f0dc3b9307be026$var$inputForm","$1f0dc3b9307be026$var$buttonForm","$1f0dc3b9307be026$var$gallery","$1f0dc3b9307be026$var$alert","$1f0dc3b9307be026$var$query","$1f0dc3b9307be026$var$handleChange","e","target","value","trim","$1f0dc3b9307be026$var$genreMovie","console","log","genreIdsJson","getItem","genreIdsParse","parse","$1f0dc3b9307be026$var$genresMovieIds","$1f0dc3b9307be026$var$createGenreArray","genreIds","slice","map","id","filter","name","$1f0dc3b9307be026$var$genreId","join","movies","movie","genresTitle","genre_ids","poster_path","title","original_title","release_date","vote_average","insertAdjacentHTML","addEventListener","preventDefault","dataMovie"],"version":3,"file":"library.497bbad2.js.map"}