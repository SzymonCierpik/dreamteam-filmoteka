{"mappings":"AAAA,MAAMA,EAAQC,SAASC,cAAc,gBAItBC,EAAWC,MAAOC,EAAMC,KACrC,MAAMC,EAAqB,2GAAwDD,UAAcD,wBAC3FG,QAAiBC,MAAMF,GACnBG,QAAaF,EAASG,OAC1B,OAAID,EAAKE,QAAQC,OAAS,GACxBb,EAAMc,UAAY,8EACX,IAGNJ,CAAI,EAIAK,EAAmBX,UAChC,MACMI,QAAiBC,MADNO,6FAGjB,aADmBR,EAASG,MACjB,EAGAM,EAAkBb,UAC7B,MACMI,QAAiBC,MADNO,0FAEXN,QAAaF,EAASG,OAG5B,OADAO,EAAkBR,GACXA,CAAI,EAGPQ,EAAqBR,IACvB,MAAMS,EAAgBT,EAAKU,OAE7BC,eAAeC,QAAQ,YAAaC,KAAKC,UAAUL,GAAe,EChClEM,OAAOC,OAAStB,UAChB,MAAMM,QAAaK,IACnBY,EAAcjB,EAAKE,QAAQ,EAO3B,MAAMgB,EAAY3B,SAASC,cAAc,SACnC2B,EAAa5B,SAASC,cAAc,gBACpC4B,EAAU7B,SAASC,cAAc,YACjC6B,EAAQ9B,SAASC,cAAc,gBACrC,IAAI8B,EAAQ,GAEZ,MAAMC,EAAeC,GAAKF,EAAQE,EAAEC,OAAOC,MAAMC,OAW3CC,EARelC,WACnBa,IACA,MAAMsB,EAAelB,eAAemB,QAAQ,aAC5CC,QAAQC,IAAIH,GACd,MAAMI,EAAgBpB,KAAKqB,MAAML,GAE/B,OADFE,QAAQC,IAAIC,GACHA,CAAa,EAEHE,GAMbC,EAAmBC,GACJA,EAASC,MAAM,EAAG,GAAGC,KAAIC,GAN9B9C,OAAO8C,UACGZ,EAAWa,QAAOjB,GAAKA,EAAEgB,KAAOA,KACvC,GAAGE,KAI8BC,CAAQH,KACxCI,KAAK,KAanB3B,EAAgBjB,IACpB,MAAM6C,EAAS7C,EACZuC,KAAIO,IACH,MAAMC,EAAcX,EAAiBU,EAAME,WAC3C,MAAO,0FAEuCF,EAAMG,mEACRH,EAAMG,qBAAqBH,EAAMI,uFAEtDJ,EAAMK,oDACNJ,uCACAD,EAAMM,kDACNN,EAAMO,0EAI5B,IAGNT,KAAK,KACNxB,EAAQkC,mBAAmB,YAAaT,EAAO,EAIjD1B,EAAWoC,iBAAiB,SAlCN7D,MAAM8B,IACxBA,EAAEgC,iBACF7D,KAAO,EAoCTyB,EAAQhB,UAAY,GAlClBiB,EAAMjB,UAAY,GAClB,MAAMqD,QAAkBhE,EAHjB,EAGiC6B,GACxCL,EAAcwC,EAAUvD,QAAQ,IA6BlCqB,GAAgBL,EAAUqC,iBAAiB,QAAShC","sources":["src/js/getMovies.js","src/index.js"],"sourcesContent":["const alert = document.querySelector('#wrongSearch');\n  const API_URL = 'https://api.themoviedb.org/3/';\n  const API_KEY = 'b118f38ec77100db6763b4cc83604589'; // Should be changed to the correct one\n  \n  export const getMovies= async (page, query) => {\n  const endPoint = API_URL + `search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=${page}&include_adult=false`;\n  const response = await fetch(endPoint);\n      const data = await response.json();\n        if (data.results.length < 1 ) {\n          alert.innerHTML = 'Search result not successful. Enter the correct movie name and search again';\n          return {};\n    }\n    // console.log(data);\n    return data;\n  };\n\n  \n  export const getPopularMovies = async () => {\n  const endPoint = API_URL + `trending/movie/week?api_key=${API_KEY}`;\n  const response = await fetch(endPoint);\n  const data = await response.json();\n  return data;\n};\n\nexport const getGenresMovies = async () => {\n  const endPoint = API_URL + `genre/movie/list?api_key=${API_KEY}`;\n  const response = await fetch(endPoint);\n  const data = await response.json();\n  // console.log(data);\n  genresDataStorage(data);\n  return data;\n};\n  \nconst genresDataStorage = (data) => {\n    const genreMovieIds = data.genres;\n  // console.log(genreMovieIds);\n  sessionStorage.setItem('genresIds', JSON.stringify(genreMovieIds));\n  };"," import { getMovies, getPopularMovies, getGenresMovies} from \"./js/getMovies\";\n  \n  // MOST POPULAR MOVIES - START //\n  \n  window.onload = async () => {\n  const data = await getPopularMovies();\n  createGallery(data.results);\n  }\n  // DATA AND SCOPE SHOULD BE CONFIRMED\n  \n  // MOST POPULAR MOVIES - END//\n  \n  //INPUT - START//\n  const inputForm = document.querySelector('input');\n  const buttonForm = document.querySelector('.form-button');\n  const gallery = document.querySelector('.gallery');\n  const alert = document.querySelector('#wrongSearch');\n  let query = '';\n  \n  const handleChange = e => query = e.target.value.trim();\n  \n \nconst genresMovieIds = async () => {\n    getGenresMovies();\n    const genreIdsJson = sessionStorage.getItem('genresIds');\n    console.log(genreIdsJson);\n  const genreIdsParse = JSON.parse(genreIdsJson);\n  console.log(genreIdsParse);\n    return genreIdsParse;\n  }\n  const genreMovie = genresMovieIds();\n  const genreId = async (id) => {\n    const genreName = await genreMovie.filter(e => e.id === id);\n    return genreName[0].name;\n  }\n  \n  const createGenreArray = genreIds => {\n    const genreArray = genreIds.slice(0, 3).map(id => genreId(id));\n    return genreArray.join(',');\n  }\n  \n  const handleClick = async e => {\n    e.preventDefault();\n    page = 1;\n    clearGallery();\n    alert.innerHTML = '';\n    const dataMovie = await getMovies(page, query);\n    createGallery(dataMovie.results);\n  };\n  \n    \n  const createGallery = data => {\n    const movies = data\n      .map(movie => {\n        const genresTitle = createGenreArray(movie.genre_ids)\n        return `\n        <div class=\"film-card\">\n        <a href=https://image.tmdb.org/t/p/original/${movie.poster_path}>\n        <img src=\"https://image.tmdb.org/t/p/w200/${movie.poster_path}\" alt=\"${movie.title}\" loading=\"lazy\" /> \n        <div class=\"info\">\n        <p class=\"info-item\">${movie.original_title}</p>\n        <p class=\"info-item\">${genresTitle}</p>\n        <p class=\"info-item\">${movie.release_date}</p>\n        <p class=\"info-item\">${movie.vote_average}</p>\n        </div>\n        </a>\n        </div>\n        `; // Class name and other should be update\n      }\n  )\n  .join(' ');\n  gallery.insertAdjacentHTML('beforeend', movies);\n};\n\n\nbuttonForm.addEventListener('click', handleClick);\n  handleChange && inputForm.addEventListener('input', handleChange);\n  \n  function clearGallery() {\n  gallery.innerHTML = '';\n  }\n  \n  // INPUT - END//\n  "],"names":["$8124735307ad2aa2$var$alert","document","querySelector","$8124735307ad2aa2$export$60e1c8f5f122c5ac","async","page","query","endPoint","response","fetch","data","json","results","length","innerHTML","$8124735307ad2aa2$export$76bd8a7b840a3729","$8124735307ad2aa2$var$API_URL","$8124735307ad2aa2$export$d5a20859808322b2","$8124735307ad2aa2$var$genresDataStorage","genreMovieIds","genres","sessionStorage","setItem","JSON","stringify","window","onload","$1f0dc3b9307be026$var$createGallery","$1f0dc3b9307be026$var$inputForm","$1f0dc3b9307be026$var$buttonForm","$1f0dc3b9307be026$var$gallery","$1f0dc3b9307be026$var$alert","$1f0dc3b9307be026$var$query","$1f0dc3b9307be026$var$handleChange","e","target","value","trim","$1f0dc3b9307be026$var$genreMovie","genreIdsJson","getItem","console","log","genreIdsParse","parse","$1f0dc3b9307be026$var$genresMovieIds","$1f0dc3b9307be026$var$createGenreArray","genreIds","slice","map","id","filter","name","$1f0dc3b9307be026$var$genreId","join","movies","movie","genresTitle","genre_ids","poster_path","title","original_title","release_date","vote_average","insertAdjacentHTML","addEventListener","preventDefault","dataMovie"],"version":3,"file":"index.2b36b0d3.js.map"}