{"mappings":"AAAAA,OAAOC,iBAAiB,QAAQ,KAC5B,MAAMC,EAASC,SAASC,cAAc,WAEtCF,EAAOG,UAAUC,IAAI,iBAErBJ,EAAOD,iBAAiB,iBAAiB,KACrCE,SAASI,KAAKC,YAAY,SAAS,GACrC,ICPN,MAAMC,EAAQN,SAASC,cAAc,gBAIxBM,EAAYC,MAAOC,EAAMC,KACpC,MAAMC,EAEJ,2GAAwDD,UAAcD,wBAClEG,QAAiBC,MAAMF,GACvBG,QAAaF,EAASG,OAC5B,OAAID,EAAKE,QAAQC,OAAS,GACxBX,EAAMY,UACJ,8EACK,IAGFJ,CAAI,EAGAK,EAAmBX,MAAMC,IACpC,MAAME,EAAqB,iHAA8DF,IACnFG,QAAiBC,MAAMF,GAE7B,aADmBC,EAASG,MACjB,EAGAK,EAAkBZ,UAC7B,MACMI,QAAiBC,MADNQ,0FAEXP,QAAaF,EAASG,OAG5B,OADAO,EAAkBR,GACXA,CAAI,EAGPQ,EAAoBR,IACxB,MAAMS,EAAgBT,EAAKU,OAE3BC,eAAeC,QAAQ,YAAaC,KAAKC,UAAUL,GAAe,ECnCpE1B,OAAOgC,OAASrB,UACd,MAAMM,QAAaK,IACnBW,EAAchB,EAAKE,QAAQ,EAK7B,MAAMe,EAAY/B,SAASC,cAAc,gBACnC+B,EAAahC,SAASC,cAAc,iBACpCgC,EAAUjC,SAASC,cAAc,oBACjCiC,EAAQlC,SAASC,cAAc,gBACrC,IAAIkC,EAAQ,GACZ,MAAMC,EAAeC,GAAMF,EAAQE,EAAEC,OAAOC,MAAMC,OAU5CC,EATiB,MACrBrB,IAEA,MAAMsB,EAAejB,eAAekB,QAAQ,aAI5C,OAFsBhB,KAAKiB,MAAMF,EAEb,EAEHG,GAoBbf,EAAgBhB,IACpB,MAAMgC,EAAShC,EACZiC,KAAIC,IACH,MAAMC,EArBa,CAAAC,IACvB,IAAIC,EAAW,GAIf,OAHAD,EAAUH,KAAIK,IACZD,EAASE,KAAKZ,EAAWa,MAAKC,GAASA,EAAMC,KAAOJ,IAAS,IAExDD,EACJJ,KAAIQ,GAASA,EAAME,OACnBC,OAAO,EAAG,GACVC,KAAK,KAAK,EAaWC,CAAiBZ,EAAMa,WAC3C,MAAO,0FAEyCb,EAAMc,oFACSd,EAAMc,qBAAqBd,EAAMe,uFAEtEf,EAAMgB,oDACPf,OAAiBD,EAAMiB,gBAAgBjB,EAAMkB,0EAInE,IAEJP,KAAK,KACR1B,EAAQkC,mBAAmB,YAAarB,EAAO,EAEjDd,EAAWlC,iBAAiB,SA3BRU,MAAM6B,IACxBA,EAAE+B,iBACF3D,KAAO,EA4BPwB,EAAQf,UAAY,GA1BpBgB,EAAMhB,UAAY,GAClB,MAAMmD,QAAkB9D,EAHjB,EAGiC4B,GACxCL,EAAcuC,EAAUrD,QAAQ,IAsBlCoB,GAAgBL,EAAUjC,iBAAiB,QAASsC,GAMpD,MAAMkC,EAAOtE,SAASC,cAAc,QAC9BsE,EAAOvE,SAASC,cAAc,eAClBD,SAASC,cAAc,qBAC/BH,iBAAiB,SAAS,KAClCwE,EAAKpE,UAAUsE,OAAO,eACtBD,EAAKrE,UAAUsE,OAAO,UACtBD,EAAKrE,UAAUsE,OAAO,UAAU","sources":["src/JS/loader.js","src/js/getMovies.js","src/index.js"],"sourcesContent":["window.addEventListener(\"load\", () => {\n    const loader = document.querySelector(\".loader\");\n\n    loader.classList.add(\"loader-hidden\");\n\n    loader.addEventListener(\"transitionend\", () => {\n        document.body.removeChild(\"loader\");\n    })\n})","const alert = document.querySelector('#wrongSearch');\nconst API_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'b118f38ec77100db6763b4cc83604589'; // Should be changed to the correct one\n\nexport const getMovies = async (page, query) => {\n  const endPoint =\n    API_URL +\n    `search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=${page}&include_adult=false`;\n  const response = await fetch(endPoint);\n  const data = await response.json();\n  if (data.results.length < 1) {\n    alert.innerHTML =\n      'Search result not successful. Enter the correct movie name and search again';\n    return {};\n  }\n  // console.log(data);\n  return data;\n};\n\nexport const getPopularMovies = async page => {\n  const endPoint = API_URL + `trending/movie/week?api_key=${API_KEY}&language=en-US&page=${page}`;\n  const response = await fetch(endPoint);\n  const data = await response.json();\n  return data;\n};\n\nexport const getGenresMovies = async () => {\n  const endPoint = API_URL + `genre/movie/list?api_key=${API_KEY}`;\n  const response = await fetch(endPoint);\n  const data = await response.json();\n  // console.log(data);\n  genresDataStorage(data);\n  return data;\n};\n\nconst genresDataStorage = data => {\n  const genreMovieIds = data.genres;\n  // console.log(genreMovieIds);\n  sessionStorage.setItem('genresIds', JSON.stringify(genreMovieIds));\n};\n","import './JS/loader.js';\nimport { getMovies, getPopularMovies, getGenresMovies } from './js/getMovies';\n// MOST POPULAR MOVIES - START //\nwindow.onload = async () => {\n  const data = await getPopularMovies();\n  createGallery(data.results);\n};\n// DATA AND SCOPE SHOULD BE CONFIRMED\n// MOST POPULAR MOVIES - END//\n//INPUT - START//\nconst inputForm = document.querySelector('[data-input]');\nconst buttonForm = document.querySelector('[data-search]');\nconst gallery = document.querySelector('.films-cards-set');\nconst alert = document.querySelector('#wrongSearch');\nlet query = '';\nconst handleChange = e => (query = e.target.value.trim());\nconst genresMovieIds = () => {\n  getGenresMovies();\n  // console.log('alert: ', alert);\n  const genreIdsJson = sessionStorage.getItem('genresIds');\n  // console.log(genreIdsJson);\n  const genreIdsParse = JSON.parse(genreIdsJson);\n  // console.log(genreIdsParse);\n  return genreIdsParse;\n};\nconst genreMovie = genresMovieIds();\n// console.log(genreMovie);\nconst createGenreArray = genre_Ids => {\n  let newArray = [];\n  genre_Ids.map(genreId => {\n    newArray.push(genreMovie.find(genre => genre.id === genreId));\n  });\n  return newArray\n    .map(genre => genre.name)\n    .splice(0, 3)\n    .join(', ');\n};\nconst handleClick = async e => {\n  e.preventDefault();\n  page = 1;\n  clearGallery();\n  alert.innerHTML = '';\n  const dataMovie = await getMovies(page, query);\n  createGallery(dataMovie.results);\n};\nconst createGallery = data => {\n  const movies = data\n    .map(movie => {\n      const genresTitle = createGenreArray(movie.genre_ids);\n      return `\n        <div class=\"film-card\">\n        <a href=https://image.tmdb.org/t/p/original/${movie.poster_path}>\n        <img class=\"film-img\" src=\"https://image.tmdb.org/t/p/w500/${movie.poster_path}\" alt=\"${movie.title}\" loading=\"lazy\" />\n        <div class=\"info\">\n        <p class=\"info-title\">${movie.original_title}</p>\n        <p class=\"info-text\">${genresTitle} | ${movie.release_date} ${movie.vote_average}</p>\n        </div>\n        </a>\n        </div>\n        `; // Class name and other should be update\n    })\n    .join(' ');\n  gallery.insertAdjacentHTML('beforeend', movies);\n};\nbuttonForm.addEventListener('click', handleClick);\nhandleChange && inputForm.addEventListener('input', handleChange);\nfunction clearGallery() {\n  gallery.innerHTML = '';\n}\n// INPUT - END//\n// Dark Mode\nconst body = document.querySelector('body');\nconst icon = document.querySelector('.fa-regular');\nconst switchBtn = document.querySelector('#toggle__checkbox');\nswitchBtn.addEventListener('click', () => {\n  body.classList.toggle('dark__theme');\n  icon.classList.toggle('fa-sun');\n  icon.classList.toggle('fa-moon');\n});\n// Dark Mode End\n"],"names":["window","addEventListener","loader","document","querySelector","classList","add","body","removeChild","$8124735307ad2aa2$var$alert","$8124735307ad2aa2$export$60e1c8f5f122c5ac","async","page","query","endPoint","response","fetch","data","json","results","length","innerHTML","$8124735307ad2aa2$export$76bd8a7b840a3729","$8124735307ad2aa2$export$d5a20859808322b2","$8124735307ad2aa2$var$API_URL","$8124735307ad2aa2$var$genresDataStorage","genreMovieIds","genres","sessionStorage","setItem","JSON","stringify","onload","$1f0dc3b9307be026$var$createGallery","$1f0dc3b9307be026$var$inputForm","$1f0dc3b9307be026$var$buttonForm","$1f0dc3b9307be026$var$gallery","$1f0dc3b9307be026$var$alert","$1f0dc3b9307be026$var$query","$1f0dc3b9307be026$var$handleChange","e","target","value","trim","$1f0dc3b9307be026$var$genreMovie","genreIdsJson","getItem","parse","$1f0dc3b9307be026$var$genresMovieIds","movies","map","movie","genresTitle","genre_Ids","newArray","genreId","push","find","genre","id","name","splice","join","$1f0dc3b9307be026$var$createGenreArray","genre_ids","poster_path","title","original_title","release_date","vote_average","insertAdjacentHTML","preventDefault","dataMovie","$1f0dc3b9307be026$var$body","$1f0dc3b9307be026$var$icon","toggle"],"version":3,"file":"library.eb455724.js.map"}